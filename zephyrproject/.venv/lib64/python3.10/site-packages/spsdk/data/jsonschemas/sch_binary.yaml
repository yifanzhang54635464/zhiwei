# Copyright 2021-2024 NXP
#
# SPDX-License-Identifier: BSD-3-Clause

type: object
required: [name, regions]
properties:
  name:
    type: string
    title: Image name
    description: The optional image name used just during prints to console during merging.
    template_value: My super binary image
  size:
    type: [string, number]
    title: Overall size of image
    description: The overall size of merged image.
    format: number
    template_value: 1024
  pattern:
    title: Pattern defined as number or special values
    description: The pattern that will be used to fill up gaps between defined regions. String or number or choose from predefined patterns - rand, zeros, ones, inc
    template_value: zeros
    oneOf:
      - type: [string, number]
        format: number
      - type: string
        enum: [rand, zeros, ones, inc]
  alignment:
    type: [string, number]
    title: Regions alignment
    description: The region alignment that will be used in case that offset is not specified.
    format: number
    template_value: 1
  regions:
    type: array
    title: Array of defined binary regions
    description: The array of individual regions to merge into final image.
    template_title: Binary images to merge
    items:
      oneOf:
        - type: object
          required: [binary_file]
          properties:
            binary_file:
              type: object
              title: Binary file
              required: [path]
              properties:
                name:
                  type: string
                  title: Image name
                  description: The optional image name used just during prints to console during merging.
                  template_value: My super binary image
                path:
                  type: string
                  title: Binary file
                  description: The path to binary file to merge into final image
                  format: file
                  template_value: my_binary_to_merge.bin
                offset:
                  type: [string, number]
                  title: Offset of image
                  description: The offset of image to be merge on. The offset could be also negative - for example to 'erase' security bit from address.
                    In case that offset definition is omitted, the block will be placed after previous one with defined alignment.
                  format: number
                  template_value: 1024
        - type: object
          required: [binary_block]
          properties:
            binary_block:
              type: object
              title: Binary block
              required: [pattern, size]
              properties:
                name:
                  type: string
                  title: Image name
                  description: The optional image name used just during prints to console during merging.
                  template_value: My super binary block
                size:
                  type: [string, number]
                  title: Binary block size
                  description: The size of binary block
                  format: number
                  template_value: 0x200
                offset:
                  type: [string, number]
                  title: Offset of binary block
                  description: The offset of binary block to be merge on. The offset could be also negative - for example to 'erase' security bit from address.
                    In case that offset definition is omitted, the block will be placed after previous one with defined alignment.
                  format: number
                  template_value: 1024
                pattern:
                  title: Pattern defined as number or special values
                  description: The pattern that will be used to fill up gaps between defined regions. String or number or choose from predefined patterns - rand, zeros, ones, inc
                  template_value: zeros
                  oneOf:
                    - type: [string, number]
                      format: number
                    - type: string
                      enum: [rand, zeros, ones, inc]
